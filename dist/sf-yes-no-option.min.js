angular.module("sfYesNoOptionTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-yes-no-option.html",'<div class="form-group"\n     ng-controller="YesNoRadioController"\n     ng-class="{\'has-error\': form.disableErrorState !== true && hasError(),\n                \'has-success\': form.disableSuccessState !== true && hasSuccess(),\n                \'has-feedback\': form.feedback !== false }"\n     sf-field-model\n     schema-validate="form" >\n  <pre>{{form|json}}</pre>\n  <div class="row">\n    <div class="col-xs-6">\n      <span class="control-label" ng-show="showTitle()">{{form.title}}</span>\n    </div>\n    <div class="col-xs-6">\n      <label class="radio-inline">\n        <input type="radio" sf-field-model ng-model="$$value$$" name="inlineRadioOptions" id="inlineRadio1" value="yes"> Yes\n      </label>\n      <label class="radio-inline">\n        <input type="radio" sf-field-model ng-model="$$value$$" name="inlineRadioOptions" id="inlineRadio2" value="no"> No\n      </label>\n      <label ng-if="form.na" class="radio-inline">\n        <input type="radio" sf-field-model ng-model="$$value$$" name="inlineRadioOptions" id="inlineRadio3" value="na"> N/A\n      </label>\n    </div>\n  </div>\n  <span class="help-block" sf-message="form.description"></span>\n</div>\n')}]),angular.module("sfYesNoOption",["schemaForm","sfYesNoOptionTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,o,n,l){var i=function(o,n,i){if("string"===n.type&&"yesNoOption"==n.format){var a=e.stdFormObj(o,n,i);return a.key=i.path,a.type="yesNoOption",i.lookup[l.stringify(i.path)]=a,a}};e.defaults.string.unshift(i),o.defineAddOn("bootstrapDecorator","yesNoOption","src/templates/sf-yes-no-option.html",n.stdBuilders)}]).controller("YesNoRadioController",["$scope",function(e){e.$watch("ngModel.$modelValue",function(){e.ngModel.$validate?(e.ngModel.$options=e.ngModel.$options||{},e.ngModel.$options={allowInvalid:!0},e.ngModel.$validate(),e.ngModel.$invalid&&(e.ngModel.$dirty=!0,e.ngModel.$pristine=!1)):e.ngModel.$setViewValue(ngModel.$viewValue)},!0),e.$watch("form",function(){e.form.disableErrorState=e.form.hasOwnProperty("readonly")&&e.form.readonly})}]);